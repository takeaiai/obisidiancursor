
# Cursorで業務フロー作成の完全ガイド

## 🎯 **なぜCursorで業務フローを作るのか**

### **従来の課題**
- 手作業による作図の非効率性（箱作り、線つなぎ、色分け）
- 手戻りによる修正作業の虚しさ
- たたき台作成だけで半日が終わる
- 認識のズレによる"ちゃぶ台返し"

### **Cursorを使う理由**
- **たたき台作成労力を6割削減**
- PMを「作図作業」から「創造的思考」へ解放
- AIが忠実に情報処理し、解釈によるズレを最小化
- 関係者の認識を揃える最高のツールを効率的に作成

---

## 📁 **必須の4つのテンプレートファイル詳細**

### **1. 業務詳細書テンプレート** (`業務詳細書_テンプレート.md`)
**重要度: ⭐⭐⭐⭐⭐（最重要）**

**役割:** AIに業務内容を構造的に理解させるための基盤

**具体的な構成:**
```markdown
# 業務詳細書テンプレート

## 1. プロセス概要
- プロセス名称: [業務名]
- 目的: [何のためにこの業務を行うか]
- 範囲: [業務の対象範囲]
- 関連部門: [関わる部門・チーム]
- 流れ概要: [全体の流れを簡潔に]

## 2. プロセス詳細（時系列順）
| 番号 | 実施者 | 活動内容 | 証憑・成果物 | 依存関係 |
|------|--------|----------|-------------|----------|
| P-001 | [担当者] | [具体的作業] | [ドキュメント名] | [前工程] |
| P-002 | [担当者] | [具体的作業] | [ドキュメント名] | P-001 |

## 3. ファイル・データ一覧
| 番号 | ファイル名 | 種類 | 形式 | 保管場所 | 使用タイミング |
|------|------------|------|------|----------|----------------|
| F-001 | [ファイル名] | [種類] | [Excel/PDF等] | [場所] | P-001で使用 |

## 4. システム連携
| 番号 | 連携内容 | 頻度 | タイミング | 関連プロセス |
|------|----------|------|------------|-------------|
| S-001 | [連携内容] | [日次/月次] | [いつ] | P-001と連動 |

## 5. 時系列チェック項目
- [ ] プロセス順序の論理性
- [ ] 依存関係の整合性
- [ ] ファイル使用タイミングの妥当性
```

**重要ポイント:**
- 時系列順序と採番ルール（P-XXX, F-XXX, S-XXX）の厳格な遵守
- 構造化された情報によるAIの理解度向上

---

### **2. 業務フロー図テンプレート** (`業務フロー図_テンプレート.drawio`)
**重要度: ⭐⭐⭐⭐☆**

**役割:** 視覚的な業務フローの表現を標準化

**構成要素:**
- **スイムレーン**: 部門別の水平レーン（営業部、経理部、システム部など）
- **標準化された記号体系**:
  - 🔵 楕円: 開始/終了ポイント
  - ⬜ 角丸四角: プロセス（作業工程）
  - 🔶 ひし形: 判断・分岐点
  - 📄 四角: データ/ドキュメント
  - 📝 付箋: ファイル/情報
- **フロー線**:
  - 実線: 通常の業務フロー
  - 破線: システム連携
- **凡例と使用方法メモ**

**作成方法:**
1. Draw.ioで手動作成: テンプレートを基に直接編集
2. XMLで自動生成: AIに業務フローをXMLコードで生成させる

---

### **3. チェックリストテンプレート** (`チェックリスト_テンプレート.md`)
**重要度: ⭐⭐⭐☆☆（任意だが推奨）**

**役割:** 作成した業務詳細書の品質と完全性を確保

**具体的な構成:**
```markdown
# 業務フロー作成チェックリスト

## 基本情報チェック
- [ ] プロセス名称が明確か
- [ ] 目的が具体的に記載されているか
- [ ] 関係者・部門が網羅されているか

## プロセス詳細チェック
- [ ] 時系列順序が論理的か
- [ ] 実施者が明確に定義されているか
- [ ] 活動内容が具体的か
- [ ] 依存関係が正しく設定されているか

## ファイル・データ管理チェック
- [ ] 使用順序が妥当か
- [ ] 保管場所が明確か
- [ ] ファイル形式が適切か

## 時系列チェック
- [ ] プロセス順序に矛盾がないか
- [ ] ファイル・データ流れが論理的か

## 業務フロー図との整合性
- [ ] 業務詳細書とフロー図の内容が一致しているか
```

---

### **4. 業務フロー作成ガイド** (`業務フロー作成ガイド.md`)
**重要度: ⭐⭐⭐⭐⭐（最重要）**

**役割:** AIに業務フロー作成を指示する際の包括的なガイドライン（ベースプロンプト）

**具体的な構成:**
```markdown
# 業務フロー作成ガイド

## 総合ガイド
このテンプレートパックを使用して業務フローを作成する際の手順とルールを定義します。

## 採番ルールの統一基準
- P-XXX: プロセス番号（P-001, P-002...）
- F-XXX: ファイル・データ番号（F-001, F-002...）
- S-XXX: システム連携番号（S-001, S-002...）

## 具体的なプロンプト例
### プロセス概要作成用
業務情報を基に、プロセス名称、目的、範囲、関連部門、流れ概要を作成してください。

### 詳細作成用
時系列順序に従い、P-001から順番に採番して、各プロセスの詳細を作成してください。
依存関係も明記してください。

### 品質チェック用
作成した業務詳細書について、時系列順序と整合性をチェックしてください。

## 品質保証の仕組み
- 時系列チェックポイントの設定
- 整合性確認方法の定義
- レビュープロセスの標準化
```

**重要ポイント:**
- ベースプロンプトとして機能し、一貫性のある高品質なアウトプットを生成
- AIの生成結果をコントロールする最重要ファイル

---

## 🔄 **4つのファイルの連携関係**

```
業務フロー作成ガイド.md ← AIへの指示書（ベースプロンプト）
        ↓
業務詳細書テンプレート.md ← 情報を構造化する型
        ↓
業務フロー図テンプレート.drawio ← 視覚化の標準形式
        ↓
チェックリストテンプレート.md ← 品質確保の仕組み
```

---

## 🚀 **実行プロセス（3ステップ）**

### **Step 1: 環境設定**
1. Cursorの左側にある四角いアイコン（Extensions）をクリック
2. 検索窓に「Draw.io Integration」と入力
3. `Draw.io Integration: Mermaid plugin`をインストール

**効果:** Cursor上でDraw.ioファイルを直接編集可能

### **Step 2: テンプレートパック作成**
**重要: 成功の9割がここで決まる**

4つのテンプレートファイルを作成：
1. `業務詳細書_テンプレート.md` ⭐⭐⭐⭐⭐
2. `業務フロー図_テンプレート.drawio` ⭐⭐⭐⭐☆
3. `チェックリスト_テンプレート.md` ⭐⭐⭐☆☆
4. `業務フロー作成ガイド.md` ⭐⭐⭐⭐⭐

### **Step 3: 実行**
**シンプルなコマンド一発実行:**
```
@業務フロー作成テンプレートパックを参照して @[業務情報ファイル] の業務フロー作成して
```

**AIが自動実行する処理:**
1. **ベースプロンプトの読み込み** - 業務フロー作成ガイド.mdの内容を自動認識
2. **業務詳細書の分析** - 時系列順序と採番ルールに従って構造化
3. **業務フロー図の生成** - Draw.ioのXMLコードを自動生成
4. **品質チェック** - 時系列順序と整合性の自動検証

**実際の手順:**
1. 業務情報ファイル（ヒアリング議事録など）を準備
2. 上記コマンドを実行
3. AIが業務詳細書を生成
4. AIが業務詳細書を基にDraw.ioファイル（.drawio）を生成
5. 生成されたファイルをCursorで開いて確認・調整

---

## 💡 **PMにとっての革命的価値**

### **4つの変革効果**
1. **思考がクリアになる**
   - 業務詳細書作成プロセスで曖昧だったプロセスが言語化・構造化
   - 自分自身の頭の中が驚くほど整理される

2. **議論の質が上がる**
   - 完成度60%でも"動くもの"があると議論は活性化
   - 「ここ違うよ」という指摘も具体的な図があることで的確になる
   - 白紙状態から始めるより圧倒的に建設的

3. **属人性を排除できる**
   - フロー図の元になった「業務詳細書」と「生成プロンプト」をバージョン管理
   - なぜそのフロー図になったのかという経緯が誰にでも分かる
   - 担当者が変わっても容易に引き継ぎが可能

4. **PMが本来の仕事に集中できる**
   - 作図という"作業"から解放
   - プロセスのボトルネックはどこか、どうすればもっと効率化できるかといった"思考"に時間を使える
   - PMが最も価値を発揮すべき領域に集中可能

### **具体的な成果**
- **作業時間削減**: たたき台作成労力を6割削減
- **手戻り削減**: 認識のズレによる修正作業の大幅減少
- **品質向上**: テンプレート化による一貫したアウトプット
- **創造的時間の確保**: 本質的な議論への時間投入

### **AIとの理想的な役割分担**
- **AI**: 面倒な下準備（0→1の作図作業）
- **人間**: 最終的な仕上げと高度な意思決定（6→10のクリエイティブな部分）

---

## 🎯 **成功のポイント**

### **重要な考え方**
業務フローは単なる「図」ではなく、**関係者の認識を揃えるための最高のツール**

- **誰が（Who）**: 実施者・責任者の明確化
- **何を（What）**: 具体的な活動内容の定義  
- **どの順番で（When）**: 時系列順序の可視化
- **どんな情報を使って（Which）**: 使用データ・ファイルの特定

### **この手法の最大の価値**
「完璧なAI」を待つのではなく、今あるAIを「賢いサポーター」として使いこなし、PMが最も価値を発揮すべき領域に集中すること。

**これが「AI駆動PM」の真髄であり、これからの時代のPMに求められるスキル**